---
title: "oldCodes"
format: pdf
editor: visual
---

# Run with hypothetical parameters

## 7 matrix

```{r}
#| label: hypothetical_parameters_7

# to avoid transient dynamics in the early years, I set up the initial population at the stable stage distribution. 
SSD7<-eigen(constructMatrix7(hyp_p3))$vectors[,1]/eigen(constructMatrix7(hyp_p3))$vectors[2,1] 
N0_7<-Re(SSD7) * 500  

nYears = 21 
#create an empty  2 x nYears matrix where each column represents the numbers in each year
N<-matrix(NA,7,nYears) 
#set the first column to the initial population sizes 
N[,1]=t(N0_7) 

# and use a loop to recursively project the population 
# and fill in the rest of the N matrix 
for(t in 1:(nYears-1)) 
  {
N[,t+1]<-round(projectPopulation7(hyp_p3,N[,t])) 
}  

# compile matrix into a data frame, with columns in Years and rows in age classes
pop_base7<-data.frame(Year=1:nYears,
                     NAdults = N[7,],
                     NY5=N[6,],
                     NY4=N[5,],
                     NY3=N[4,],
                     NJ2=N[3,],
                     NJ1=N[2,],
                     NJ0=N[1,]) %>%
  mutate(
    NnbAdults = rowSums(select(., 3:5)),  # Sum column 3 to 5 as total number of non-breeding adult (Y3-5)
    NImmatures = rowSums(select(., 6:8)), # Sum column 6 to 8 as total number of immatures (J0-2)
    .after = NAdults
  )

pop_base7 %>% ggplot() +
  geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
  geom_line(aes(x = Year, y = NnbAdults, color = "young Adults")) +
  geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
  labs(
    title = "7*7 Matrix",
    subtitle = paste("lambda =", lam7),
    color = "Age Group"
  ) +
  scale_color_manual(values = c("Adults" = "black", "young Adults" = "blue", "Immatures" = "red"))->hyp_plot_7
```

## 3 matrix

```{r}
#| label: hypothetical_parameters_3
# to avoid transient dynamics in the early years, I set up the initial population at the stable stage distribution.
SSD3<-eigen(constructMatrix3(hyp_p3))$vectors[,1]/eigen(constructMatrix3(hyp_p3))$vectors[2,1]
N0_3<-Re(SSD3) * 500

nYears = 21
#create an empty  2 x nYears matrix where each column represents the numbers in each year
N<-matrix(NA,3,nYears)
#set the first column to the initial population sizes
N[,1]=t(N0_3)

# and use a loop to recursively project the population
# and fill in the rest of the N matrix
for(t in 1:(nYears-1))
  {
N[,t+1]<-round(projectPopulation3(hyp_p3,N[,t]))
}

# compile matrix into a data frame, with columns in Years and rows in age classes
pop_base3<-data.frame(Year=1:nYears,
                     NAdults = N[3,],
                     NnbAdults=N[2,],
                     NImmatures=N[1,],
                     deltaN=c(NA,N[3,2:nYears]-N[3,1:(nYears-1)]),
                     percent_deltaN = c(NA,
                                        round(100*(N[3,2:nYears]-N[3,1:(nYears-1)]
                                                   )/N[3,1:(nYears-1)],3)))
lam3

pop_base3 %>% ggplot() +
  geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
  geom_line(aes(x = Year, y = NnbAdults, color = "young Adults")) +
  geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
  labs(
    title = "3*3 Matrix",
    subtitle = paste("lambda =", lam3),
    color = "Age Group"
  ) +
  scale_color_manual(values = c("Adults" = "black", "young Adults" = "blue", "Immatures" = "red"))->hyp_plot_3

```

## 2 Matrix

```{r}
#| label: hypothetical_parameters_2
# to avoid transient dynamics in the early years, I set up the initial population at the stable stage distribution.
SSD2<-eigen(constructMatrix2(hyp_p2))$vectors[,1]/eigen(constructMatrix2(hyp_p2))$vectors[2,1]
N0_2<-SSD2 * 500

nYears = 21
#create an empty  2 x nYears matrix where each column represents the numbers in each year
N<-matrix(NA,2,nYears)
#set the first column to the initial population sizes
N[,1]=t(N0_2)
# and use a loop to recursively project the population
# and fill in the rest of the N matrix
for(t in 1:(nYears-1))
{
  N[,t+1]<-round(projectPopulation2(hyp_p2,N[,t]))
}

pop_base2<-data.frame(Year=1:nYears,
                NAdults = N[2,],
                NImmatures=N[1,],
                deltaN=c(NA,N[2,2:nYears]-N[2,1:(nYears-1)]),
                percent_deltaN = c(NA,
                            round(100*(N[2,2:nYears]-N[2,1:(nYears-1)])/N[2,1:(nYears-1)],2))) 

pop_base2 %>% ggplot() +
  geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
  geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
  labs(
    title = "2*2 Matrix",
    subtitle = paste("lambda =", lam2),
    color = "Age Group"
  ) +
  scale_color_manual(values = c("Adults" = "black", "Immatures" = "red"))->hyp_plot_2
```

## 4 Matrix

```{r}
#| label: hypothetical_parameters_4
# to avoid transient dynamics in the early years, I set up the initial population at the stable stage distribution.
SSD<-eigen(constructMatrix4(hyp_p2))$vectors[,1]/eigen(constructMatrix4(hyp_p2))$vectors[2,1]
N0_4<-Re(SSD) * 500

nYears = 21
#create an empty  2 x nYears matrix where each column represents the numbers in each year
N<-matrix(NA,4,nYears)
#set the first column to the initial population sizes
N[,1]=t(N0_4)
# and use a loop to recursively project the population
# and fill in the rest of the N matrix
for(t in 1:(nYears-1))
{
  N[,t+1]<-round(projectPopulation4(hyp_p2,N[,t]))
}

pop_base4<-data.frame(Year=1:nYears,
                     NAdults = N[4,],
                     NJ2=N[3,],
                     NJ1=N[2,],
                     NJ0=N[1,]) %>%
  mutate(
    NImmatures = rowSums(select(., 3:5)), # Sum column 6 to 8 as total number of immatures (J0-2)
    .after = NAdults
  )

pop_base4 %>% ggplot() +
  geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
  geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
  labs(
    title = "4*4 Matrix",
    subtitle = paste("lambda =", lam4),
    color = "Age Group"
  ) +
  scale_color_manual(values = c("Adults" = "black", "Immatures" = "red"))->hyp_plot_4
```

## plot 4 projections

```{r}
#| fig-width: 8
#| fig-height: 5
ggarrange(hyp_plot_7, hyp_plot_3, hyp_plot_4,hyp_plot_2,
          ncol = 2, nrow = 2,common.legend = TRUE, legend="bottom")
```

### parameter lists

```{r}
lowest_b_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.3, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.92 # young adult survival
)

lowest_b_y2 <- param_collapse(lowest_b_y)

lower_b_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.92 # young adult survival
)

lower_b_y2 <- param_collapse(lower_b_y)

high_b_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.7, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.92 # young adult survival
)

high_b_y2 <- param_collapse(high_b_y)

```

### plot 3 projections

```{r}
#| fig-width: 12
#| fig-height: 10

b_y_0.3_plot <- plotProjection3(lowest_b_y,21)
b_y_0.5_plot <- plotProjection3(lower_b_y,21)
b_y_0.7_plot <- plotProjection3(high_b_y,21)

b_y_0.3_plot2 <- plotProjection2(lowest_b_y2,21)
b_y_0.5_plot2 <- plotProjection2(lower_b_y2,21)
b_y_0.7_plot2 <- plotProjection2(high_b_y2,21)

b_y_0.3_text <- param_text(lowest_b_y)
b_y_0.5_text <- param_text(lower_b_y)
b_y_0.7_text <- param_text(high_b_y)

ggarrange( b_y_0.3_plot, b_y_0.3_plot2, b_y_0.3_text,
           b_y_0.5_plot, b_y_0.5_plot2, b_y_0.5_text,
           b_y_0.7_plot, b_y_0.7_plot2, b_y_0.7_text,
          labels = c("b_y=0.3, b_a=0.8", "collapsed to 2 age classes", "",
                     "b_y=0.5, b_a=0.8", "collapsed to 2 age classes", "",
                     "b_y=0.7, b_a=0.8", "collapsed to 2 age classes", ""),
          ncol = 3, nrow = 3,common.legend = TRUE, legend="bottom")


```

## young adult survival

### parameter lists

```{r}
lowest_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.3 # young adult survival
)

lowest_sigma_y2 <- param_collapse(lowest_sigma_y)

lower_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

lower_sigma_y2 <- param_collapse(lower_sigma_y)

high_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.7 # young adult survival
)

high_sigma_y2 <- param_collapse(high_sigma_y)

```

### plot 3 projections

```{r}
#| fig-width: 12
#| fig-height: 10

sigma_y_0.3_plot <- plotProjection3(lowest_sigma_y,21)
sigma_y_0.5_plot <- plotProjection3(lower_sigma_y,21)
sigma_y_0.7_plot <- plotProjection3(high_sigma_y,21)

sigma_y_0.3_plot2 <- plotProjection2(lowest_sigma_y2,21)
sigma_y_0.5_plot2 <- plotProjection2(lower_sigma_y2,21)
sigma_y_0.7_plot2 <- plotProjection2(high_sigma_y2,21)

sigma_y_0.3_text <- param_text(lowest_sigma_y)
sigma_y_0.5_text <- param_text(lower_sigma_y)
sigma_y_0.7_text <- param_text(high_sigma_y)

ggarrange( sigma_y_0.3_plot, sigma_y_0.3_plot2, sigma_y_0.3_text,
           sigma_y_0.5_plot, sigma_y_0.5_plot2, sigma_y_0.5_text,
           sigma_y_0.7_plot, sigma_y_0.7_plot2, sigma_y_0.7_text,
          labels = c("sigma_y=0.3", "collapsed to 2 age classes", "",
                     "sigma_y=0.5", "collapsed to 2 age classes", "",
                     "sigma_y=0.7", "collapsed to 2 age classes", ""),
          ncol = 3, nrow = 3,common.legend = TRUE, legend="bottom")


```

## adult survival

### parameter lists

```{r}
lowest_pa <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.6,  # Adult survival
  sigma_y=0.5 # young adult survival
)

lowest_pa2 <- param_collapse(lowest_pa)

lower_pa <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.75,  # Adult survival
  sigma_y=0.5 # young adult survival
)

lower_pa2 <- param_collapse(lower_pa)

high_pa <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

high_pa2 <- param_collapse(high_pa)

```

### plot all projections

```{r}
#| fig-width: 12
#| fig-height: 10

pa_0.5_plot <- plotProjection3(lowest_pa,21)
pa_0.75_plot <- plotProjection3(lower_pa,21)
pa_0.92_plot <- plotProjection3(high_pa,21)

pa_0.5_plot2 <- plotProjection2(lowest_pa2,21)
pa_0.75_plot2 <- plotProjection2(lower_pa2,21)
pa_0.92_plot2 <- plotProjection2(high_pa2,21)

pa_0.5_text <- param_text(lowest_pa)
pa_0.75_text <- param_text(lower_pa)
pa_0.92_text <- param_text(high_pa)

ggarrange( pa_0.5_plot, pa_0.5_plot2, pa_0.5_text,
           pa_0.75_plot, pa_0.75_plot2, pa_0.75_text,
           pa_0.92_plot, pa_0.92_plot2, pa_0.92_text,
          labels = c("pa=0.5", "collapsed to 2 age classes", "",
                     "pa=0.75", "collapsed to 2 age classes", "",
                     "pa=0.92", "collapsed to 2 age classes", ""),
          ncol = 3, nrow = 3,common.legend = TRUE, legend="bottom")


```

##juvenile survival

### parameter lists

```{r}
lowest_sigma_j <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.05^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

lowest_sigma_j2 <- param_collapse(lowest_sigma_j)

lower_sigma_j <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.2^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

lower_sigma_j2 <- param_collapse(lower_sigma_j)

high_sigma_j <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0.5, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

high_sigma_j2 <- param_collapse(high_sigma_j)

```

### plot 3 projections

```{r}
#| fig-width: 12
#| fig-height: 10

sigma_j_0.3_plot <- plotProjection3(lowest_sigma_j,21)
sigma_j_0.5_plot <- plotProjection3(lower_sigma_j,21)
sigma_j_0.7_plot <- plotProjection3(high_sigma_j,21)

sigma_j_0.3_plot2 <- plotProjection2(lowest_sigma_j2,21)
sigma_j_0.5_plot2 <- plotProjection2(lower_sigma_j2,21)
sigma_j_0.7_plot2 <- plotProjection2(high_sigma_j2,21)

sigma_j_0.3_text <- param_text(lowest_sigma_j)
sigma_j_0.5_text <- param_text(lower_sigma_j)
sigma_j_0.7_text <- param_text(high_sigma_j)

ggarrange( sigma_j_0.3_plot, sigma_j_0.3_plot2, sigma_j_0.3_text,
           sigma_j_0.5_plot, sigma_j_0.5_plot2, sigma_j_0.5_text,
           sigma_j_0.7_plot, sigma_j_0.7_plot2, sigma_j_0.7_text,
          labels = c("", "collapsed to 2 age classes", "",
                     "", "collapsed to 2 age classes", "",
                     "", "collapsed to 2 age classes", ""),
          ncol = 3, nrow = 3,common.legend = TRUE, legend="bottom")


```

## plot all projections

```{r}
#| fig-width: 16
#| fig-height: 10

b_y_0.3_plot <- plotProjection3(lowest_b_y,21)
b_y_0.5_plot <- plotProjection3(lower_b_y,21)
b_y_0.7_plot <- plotProjection3(high_b_y,21)

sigma_y_0.3_plot <- plotProjection3(lowest_sigma_y,21)
sigma_y_0.5_plot <- plotProjection3(lower_sigma_y,21)
sigma_y_0.7_plot <- plotProjection3(high_sigma_y,21)

pa_0.5_plot <- plotProjection3(lowest_pa,21)
pa_0.75_plot <- plotProjection3(lower_pa,21)
pa_0.92_plot <- plotProjection3(high_pa,21)

sigma_j_0.35_plot <- plotProjection3(lowest_sigma_j,21)
sigma_j_0.57_plot <- plotProjection3(lower_sigma_j,21)
sigma_j_0.75_plot <- plotProjection3(high_sigma_j,21)


ggarrange(pa_0.5_plot, sigma_y_0.3_plot, b_y_0.3_plot, sigma_j_0.35_plot,  
          pa_0.75_plot, sigma_y_0.5_plot, b_y_0.5_plot, sigma_j_0.57_plot, 
          pa_0.92_plot, sigma_y_0.7_plot, b_y_0.7_plot, sigma_j_0.75_plot, 
          labels = c("Pa=0.5", "sigma_y=0.3", "b_y=0.3", "sigma_j=0.35", 
                     "Pa=0.75", "sigma_y=0.5", "b_y=0.5", "sigma_j=0.57",  
                     "Pa=0.92", "sigma_y=0.7", "b_y=0.7", "sigma_j=0.75" ),
          ncol = 4, nrow = 3,common.legend = TRUE, legend="bottom")


```

```{r}
#| fig-width: 8
#| fig-height: 3.3

hyp_plot2 <- plotProjection2(hyp_p2,21)
hyp_plot3 <- plotProjection3(hyp_p3,21)
ggarrange(hyp_plot2, hyp_plot3, ncol = 2, nrow = 1,common.legend = TRUE, legend="bottom")
```

## Plunging Floater

young non-breeding adult survival decline

### parameter lists

```{r}
lowest_nb_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.3 # young adult survival
)

lower_nb_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.5 # young adult survival
)

high_nb_sigma_y <- list(
  b_a=0.8,   # adult pairing propensity
  b_y=0, # young adult pairing propensity
  m=0.48, # chick production.    
  r=0.5,   #sex ratio   
  sigma_j = 0.45^(12/34), #juv survival
  Pa=0.92,  # Adult survival
  sigma_y=0.7 # young adult survival
)

```

## plot all projections

```{r}
#| fig-width: 4
#| fig-height: 10

nb_sigma_y_0.3_plot <- plotProjection3(lowest_nb_sigma_y,21)
nb_sigma_y_0.5_plot <- plotProjection3(lower_nb_sigma_y,21)
nb_sigma_y_0.7_plot <- plotProjection3(high_nb_sigma_y,21)
ggarrange(nb_sigma_y_0.3_plot,
          nb_sigma_y_0.5_plot,
          nb_sigma_y_0.7_plot,
          labels = c("sigma_y=0.3, b_y=0",
                     "sigma_y=0.5, b_y=0", 
                     "sigma_y=0.7, b_y=0"),
          ncol = 1, nrow = 3,common.legend = TRUE, legend="bottom")


```

## 3 to 2 matrix parameter collapse function

```{r}
param_collapse <- function(param_list){
  SSD3<-eigen(constructMatrix3(param_list))$vectors[,1]/eigen(constructMatrix3(param_list))$vectors[2,1]
  N0_3<-Re(SSD3)/sum(Re(SSD3)) * 500
  p2 <- list(
  b=(param_list$b_a * N0_3[3] + param_list$b_y * N0_3[2]) / (N0_3[3] + N0_3[2]),   # adult pairing propensity
  m=param_list$m, # chick production.    
  r=param_list$r,   #sex ratio   
  sigma_j = param_list$sigma_j, #juv survival
  Pa=(param_list$Pa * N0_3[3] + param_list$sigma_y * N0_3[2]) / (N0_3[3] + N0_3[2])  # Adult survival
)
  return(p2)
}
```

## Plotting 3 matrix

```{r}
plotProjection3 <- function (param_list, duration){
  SSD3<-eigen(constructMatrix3(param_list))$vectors[,1]/eigen(constructMatrix3(param_list))$vectors[2,1]
  N0_3<-Re(SSD3)/sum(Re(SSD3)) * 500
  
  nYears = duration
  #create an empty  2 x nYears matrix where each column represents the numbers in each year
  N<-matrix(NA,3,nYears)
  #set the first column to the initial population sizes
  N[,1]=t(N0_3)
  
  # and use a loop to recursively project the population
  # and fill in the rest of the N matrix
  for(t in 1:(nYears-1))
  {
    N[,t+1]<-round(projectPopulation3(param_list,N[,t]))
  }
  
  # compile matrix into a data frame, with columns in Years and rows in age classes
  pop_base3<-data.frame(Year=1:nYears,
                        NAdults = N[3,],
                        NnbAdults=N[2,],
                        NImmatures=N[1,],
                        deltaN=c(NA,N[3,2:nYears]-N[3,1:(nYears-1)]),
                        percent_deltaN = c(NA,
                                           round(100*(N[3,2:nYears]-N[3,1:(nYears-1)]
                                           )/N[3,1:(nYears-1)],3)))
  
  pop_base3 %>% ggplot() +
    geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
    geom_line(aes(x = Year, y = NnbAdults, color = "young Adults")) +
    geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
    labs(
      subtitle = paste("lambda =", lam3),
      color = "Age Group"
    ) +
    scale_color_manual(values = c("Adults" = "black", "young Adults" = "blue", "Immatures" = "red"))+
  theme(plot.margin=unit(c(8,1,1,1),"mm"))
}
```

## Plotting 2 matrix

```{r}
plotProjection2 <- function (param_list, duration){
  SSD2<-eigen(constructMatrix2(param_list))$vectors[,1]/eigen(constructMatrix2(param_list))$vectors[2,1]
  N0_2<-Re(SSD2)/sum(Re(SSD2)) * 500
  
  nYears = duration
  #create an empty  2 x nYears matrix where each column represents the numbers in each year
  N<-matrix(NA,2,nYears)
  #set the first column to the initial population sizes
  N[,1]=t(N0_2)
  # and use a loop to recursively project the population
  # and fill in the rest of the N matrix
  for(t in 1:(nYears-1))
  {
    N[,t+1]<-round(projectPopulation2(param_list,N[,t]))
  }
  
  pop_base2<-data.frame(Year=1:nYears,
                        NAdults = N[2,],
                        NImmatures=N[1,],
                        deltaN=c(NA,N[2,2:nYears]-N[2,1:(nYears-1)]),
                        percent_deltaN = c(NA,
                                           round(100*(N[2,2:nYears]-N[2,1:(nYears-1)])/N[2,1:(nYears-1)],2))) 
  
  pop_base2 %>% ggplot() +
    geom_line(aes(x = Year, y = NAdults, color = "Adults")) +
    geom_line(aes(x = Year, y = NImmatures, color = "Immatures")) +
    labs(
      subtitle = paste("lambda =", lam2),
      color = "Age Group"
    ) +
    scale_color_manual(values = c("Adults" = "black", "Immatures" = "red"))+
  theme(plot.margin=unit(c(8,1,1,1),"mm"))
}
```
